// STYLES

// DEV IMPORTS
import Head from "next/head";
import Image from "next/image";
// import { useRouter } from "next/router";

// COMPONENTS
import FeaturedArticle from "../../../components/categoryPage/FeaturedArticle";
import RecentPost from "../../../components/RecentPost";

// FUNCTIONS
import {
  getLatestCategoryPost,
  getFiveLatestPostCategory,
  getTags,
} from "../../../lib/talkToGhost";

export default function CategoryPage(props) {
  //shoptalk/category
  //console.log(props.tags);

  // const router = useRouter();

  // console.log(router.pathname);
  // console.log(router.query);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <FeaturedArticle featuredPost={props.latestPost} />
      <RecentPost
        recentPost={props.recentPost.slice(1)}
        category={props.category}
      />
    </>
  );
}

export async function getStaticProps(context) {
  const { params } = context;

  //Dynamaic Based on URL
  const category = params.categoryName;

  const latestPost = await getLatestCategoryPost(category);
  const recentPost = await getFiveLatestPostCategory(category);

  return {
    props: { latestPost, recentPost, category },
  };
}

export async function getStaticPaths() {
  const tags = await getTags();
  // Get the paths we want to create based on tags
  const paths = tags.map((tag) => ({
    params: { categoryName: tag.slug },
  }));

  // { fallback: false } means posts not found should 404.
  return { paths, fallback: false };
}
